--Author:  Kevin Thomas, Assistant Registrar
--         Chuck Hackney (Systems Analyst) 
--Edited from Academic and Probation Script
--Date:    12-AUG-2019
--Purpose: This query will return students who are on suspension and probation by prompted major and prompted term.
--Note:    When prompted, enter the term for which the end of term academic suspension resulted in suspension - not the first term of the suspension.


select distinct spriden_id as "ID"
,      Sgbstdn_DEGC_CODE_1 as "Degree Type"  --Student Degree Type during prompted term
,      Sgbstdn_MAJR_CODE_1 as "Major"   -- Student Major during prompted term
,      Sgbstdn_MAJR_CODE_CONC_1 as "Concentration"  --Student Concentration during prompted term
,      spriden_last_name as "Last Name"
,      spriden_first_name as "First Name"
,      shrttrm_term_code as "Term"
,      shrttrm_astd_code_end_of_term as "ASTD Code"  --Academic Standing at the end of the prompted term
,      goremal_email_address as "Email"
,      spraddr_street_line1 as "Address_1"
,      spraddr_street_line2 as "Address_2"
,      spraddr_city as "City"
,      spraddr_stat_code as "State"
,      spraddr_zip as "ZIP"
from  spriden s,  sgbstdn
,     shrttrm
,    (select spraddr_street_line1
        ,      spraddr_street_line2
        ,      spraddr_city
        ,      spraddr_stat_code
        ,      spraddr_zip
        ,      spraddr_pidm
        from spraddr d
        where spraddr_status_ind is null
        and spraddr_to_date is null 
        and spraddr_atyp_code = (select min(spraddr_atyp_code)
                                 from spraddr
                                 where spraddr_status_ind is null
                                 and spraddr_to_date is null
                                 and spraddr_atyp_code in ('LO','PR')
                                 and spraddr_pidm = d.spraddr_pidm)) b  --subquery to get address. gets LO if available, and PR if not
,       (select goremal_pidm
         ,      goremal_email_address
         from goremal
         where goremal_emal_code='PERS'
         and goremal_preferred_ind = 'Y') e  -- subquery to get PERS email address         
where spriden_change_ind is null 
and   spriden_entity_ind='P' 
and   shrttrm_pidm = spriden_pidm
and   spriden_pidm = sgbstdn_pidm
and   b.spraddr_pidm (+) = spriden_pidm --outer join address query
and   shrttrm_term_code = :Term
and   SGBSTDN_TERM_CODE_EFF = (select max(sgbstdn_term_code_eff)
                               from sgbstdn
                               where sgbstdn_pidm = s.spriden_pidm
                               and sgbstdn_term_code_eff <= :Term) 
and   shrttrm_astd_code_end_of_term <> '00'
and   e.goremal_pidm (+) = spriden_pidm  -- outer join email address subquery
order by shrttrm_astd_code_end_of_term, spriden_last_name,spriden_first_name;